/* 0.24.1 */import { Decimal } from 'decimal.js';
import { Expression } from '../../math-json/math-json-format';
import { BoxedExpression, IComputeEngine } from '../public';
export declare function isBoxedExpression(x: unknown): x is BoxedExpression;
/**
 * For any numeric result, if `bignumPreferred()` is true, calculate using
 * bignums. If `bignumPreferred()` is false, calculate using machine numbers
 */
export declare function bignumPreferred(ce: IComputeEngine): boolean;
/** When result of a numeric evaluation is a complex number,
 * return `NaN` if not `complexallowed()`
 */
export declare function complexAllowed(ce: IComputeEngine): boolean;
export declare function isLatexString(s: unknown): s is string;
export declare function asLatexString(s: unknown): string | null;
export declare function hashCode(s: string): number;
/**
 * If `expr` is a number, return it as a Decimal (it might be
 * in the machine value range or not). Use `isInMachineRange()` to check.
 *
 * Use this instead of `machineValue()` when possible, as `machineValue` will
 * truncate bignums to machine numbers
 */
export declare function bignumValue(ce: IComputeEngine, expr: Expression | null | undefined): Decimal | null;
export declare function asBigint(expr: BoxedExpression): bigint | null;
/** Return the local variables in the expression.
 *
 * A local variable is an identifier that is declared with a `Declare`
 * expression in a `Block` expression.
 *
 * Note that the canonical form of a `Block` expression will hoist all
 * `Declare` expressions to the top of the block. `Assign` expressions
 * of undeclared variables will also have a matching `Declare` expressions
 * hoisted.
 *
 */
