/* 0.24.1 */import { BoxedExpression, BoxedSubstitution, PatternMatchOptions, SemiBoxedExpression } from '../public';
import { BoxedSymbol } from './boxed-symbol';
import Complex from 'complex.js';
import Decimal from 'decimal.js';
export declare function isWildcard(expr: BoxedExpression): expr is BoxedSymbol;
export declare function wildcardName(expr: BoxedExpression): string | null;
/**
 * The function attempts to match a subject expression to a
 * [pattern](/compute-engine/guides/patterns-and-rules/).
 *
 * If the match is successful, it returns a `Substitution` indicating how to
 * transform the pattern to become the subject.
 *
 * If the expression does not match the pattern, it returns `null`.
 *
 */
export declare function match(subject: BoxedExpression, pattern: Decimal | Complex | [num: number, denom: number] | SemiBoxedExpression | BoxedExpression, options?: PatternMatchOptions): BoxedSubstitution | null;
